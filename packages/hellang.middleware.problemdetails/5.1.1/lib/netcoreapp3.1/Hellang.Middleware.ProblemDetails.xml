<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hellang.Middleware.ProblemDetails</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Extensions.Internal.TypeNameHelper.GetTypeDisplayName(System.Type,System.Boolean,System.Boolean,System.Boolean,System.Char)">
            <summary>
            Pretty print a type name.
            </summary>
            <param name="type">The <see cref="T:System.Type"/>.</param>
            <param name="fullName"><c>true</c> to print a fully qualified name.</param>
            <param name="includeGenericParameterNames"><c>true</c> to include generic parameter names.</param>
            <param name="includeGenericParameters"><c>true</c> to include generic parameters.</param>
            <param name="nestedTypeDelimiter">Character to use as a delimiter in nested type names</param>
            <returns>The pretty printed type name.</returns>
        </member>
        <member name="T:Microsoft.Extensions.StackTrace.Sources.ExceptionDetails">
            <summary>
            Contains details for individual exception messages.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.StackTrace.Sources.ExceptionDetails.Error">
            <summary>
            An individual exception
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.StackTrace.Sources.ExceptionDetails.StackFrames">
            <summary>
            The generated stack frames
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.StackTrace.Sources.ExceptionDetails.ErrorMessage">
            <summary>
            Gets or sets the summary message.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.StackTrace.Sources.StackFrameSourceCodeInfo">
            <summary>
            Contains the source code where the exception occurred.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.StackTrace.Sources.StackFrameSourceCodeInfo.Function">
            <summary>
            Function containing instruction
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.StackTrace.Sources.StackFrameSourceCodeInfo.File">
            <summary>
            File containing the instruction
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.StackTrace.Sources.StackFrameSourceCodeInfo.Line">
            <summary>
            The line number of the instruction
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.StackTrace.Sources.StackFrameSourceCodeInfo.PreContextLine">
            <summary>
            The line preceding the frame line
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.StackTrace.Sources.StackFrameSourceCodeInfo.PreContextCode">
            <summary>
            Lines of code before the actual error line(s).
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.StackTrace.Sources.StackFrameSourceCodeInfo.ContextCode">
            <summary>
            Line(s) of code responsible for the error.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.StackTrace.Sources.StackFrameSourceCodeInfo.PostContextCode">
            <summary>
            Lines of code after the actual error line(s).
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.StackTrace.Sources.StackFrameSourceCodeInfo.ErrorDetails">
            <summary>
            Specific error details for this stack frame.
            </summary>
        </member>
        <member name="T:Hellang.Middleware.ProblemDetails.ProblemDetailsException">
            <summary>
            An exception for passing an <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> instance to
            be handled by the <see cref="T:Hellang.Middleware.ProblemDetails.ProblemDetailsMiddleware"/>.
            </summary>
        </member>
        <member name="M:Hellang.Middleware.ProblemDetails.ProblemDetailsExtensions.AddProblemDetails(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the required services services for <see cref="M:Hellang.Middleware.ProblemDetails.ProblemDetailsExtensions.UseProblemDetails(Microsoft.AspNetCore.Builder.IApplicationBuilder)"/> to work correctly,
            using the default options.
            </summary>
            <param name="services">The service collection to add the services to.</param>
        </member>
        <member name="M:Hellang.Middleware.ProblemDetails.ProblemDetailsExtensions.AddProblemDetails(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Hellang.Middleware.ProblemDetails.ProblemDetailsOptions})">
            <summary>
            Adds the required services services for <see cref="M:Hellang.Middleware.ProblemDetails.ProblemDetailsExtensions.UseProblemDetails(Microsoft.AspNetCore.Builder.IApplicationBuilder)"/> to work correctly,
            using the specified <paramref name="configure"/> callback for configuration.
            </summary>
            <param name="services">The service collection to add the services to.</param>
            <param name="configure"></param>
        </member>
        <member name="M:Hellang.Middleware.ProblemDetails.ProblemDetailsExtensions.UseProblemDetails(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds the <see cref="T:Hellang.Middleware.ProblemDetails.ProblemDetailsMiddleware"/> to the application pipeline.
            </summary>
            <param name="app">The application builder to add the middleware to.</param>
            <exception cref="T:System.InvalidOperationException">If <see cref="M:Hellang.Middleware.ProblemDetails.ProblemDetailsExtensions.AddProblemDetails(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/> hasn't been called.</exception>
        </member>
        <member name="T:Hellang.Middleware.ProblemDetails.ProblemDetailsExtensions.ProblemDetailsMarkerService">
            <summary>
            A marker class used to determine if the required services were added
            to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> before the middleware is configured.
            </summary>
        </member>
        <member name="P:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.SourceCodeLineCount">
            <summary>
            Gets or sets the number of source code lines to include for context in exception details.
            The default is <c>6</c>.
            </summary>
        </member>
        <member name="P:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.FileProvider">
            <summary>
            The <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider"/> for getting file information when reading stack trace information.
            </summary>
        </member>
        <member name="P:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.GetTraceId">
            <summary>
            Gets or sets the function for getting a <c>traceId</c> to include in the problem response.
            The default gets the ID from <see cref="P:System.Diagnostics.Activity.Current"/> with a
            fallback to <see cref="P:Microsoft.AspNetCore.Http.HttpContext.TraceIdentifier"/>.
            </summary>
        </member>
        <member name="P:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.IncludeExceptionDetails">
            <summary>
            Gets or sets the predicate used for determining whether exception details (stack trace etc.)
            should be included in the problem details response.
            The default returns <c>true</c> when <see cref="P:Microsoft.Extensions.Hosting.IHostEnvironment.EnvironmentName"/> is "Development".
            </summary>
        </member>
        <member name="P:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.ExceptionDetailsPropertyName">
            <summary>
            The property name to use for exception details.
            This defaults to <see cref="F:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.DefaultExceptionDetailsPropertyName"/> (<c>errors</c>).
            </summary>
        </member>
        <member name="P:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.IsProblem">
            <summary>
            Gets or sets the predicate used for determining whether a request/response should be considered
            a problem or not. The default returns <c>true</c> if the following is true:
            <list type="bullet">
              <item>
                <description>The status code is between 400 and 600.</description>
              </item>
              <item>
                <description>The <c>Content-Length</c> header is empty.</description>
              </item>
              <item>
                <description>The <c>Content-Type</c> header is empty.</description>
              </item>
            </list>
            </summary>
        </member>
        <member name="P:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.MapStatusCode">
            <summary>
            Gets or sets the function for mapping response status codes to problem details instances.
            The default will just create a <see cref="T:Hellang.Middleware.ProblemDetails.StatusCodeProblemDetails"/> using the response
            status code of the current <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.
            </summary>
        </member>
        <member name="P:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.OnBeforeWriteDetails">
            <summary>
            Gets or sets a callback used to transform a problem details instance right before
            it is written to the response.
            </summary>
        </member>
        <member name="P:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.ShouldLogUnhandledException">
            <summary>
            Gets or sets a predicate used for determining whether an exception should be logged as unhandled.
            The default returns <c>true</c> if the response status code doesn't have a value, or the
            value is <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status500InternalServerError"/> or higher.
            </summary>
        </member>
        <member name="P:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.AllowedHeaderNames">
            <summary>
            Gets the set of headers that shouldn't be cleared when producing a problem details response.
            This includes CORS, HSTS and authentication challenge headers by default.
            </summary>
        </member>
        <member name="P:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.ContentTypes">
            <summary>
            Gets the supported <c>Content-Type</c> values for use in content negotiation.
            The default values are <c>application/problem+json</c> and <c>application/problem+xml</c>.
            </summary>
        </member>
        <member name="M:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.MapToStatusCode``1(System.Int32)">
            <summary>
            Maps the specified exception type <typeparamref name="TException"/> to the specified
            status code <paramref name="statusCode"/>. This also includes default values for
            <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Type"/> and <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Title"/>.
            </summary>
            <param name="statusCode">The status code to return for the specified exception.</param>
            <typeparam name="TException">The exception type to map to the specified status code.</typeparam>
        </member>
        <member name="M:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.Ignore``1">
            <summary>
            Configures the middleware to ignore any exception of the specified exception type <typeparamref name="TException"/>.
            This will cause cause the exception to be rethrown to be handled upstream.
            </summary>
            <typeparam name="TException">The exception type to ignore.</typeparam>
        </member>
        <member name="M:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.Map``1(System.Func{``0,Microsoft.AspNetCore.Mvc.ProblemDetails})">
            <summary>
            Maps the specified exception type <typeparamref name="TException"/> to a <see cref="N:Hellang.Middleware.ProblemDetails"/> instance
            using the specified <paramref name="mapping"/> function.
            </summary>
            <remarks>
            Mappers are called in the order they're registered.
            Returning <c>null</c> from the mapper will signify that you can't or don't want to map the exception to <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/>.
            This will cause cause the exception to be rethrown.
            </remarks>
            <param name="mapping">The mapping function for creating a a problem details instance.</param>
            <typeparam name="TException">The exception type to map using the specified mapping function.</typeparam>
        </member>
        <member name="M:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.Map``1(System.Func{Microsoft.AspNetCore.Http.HttpContext,``0,Microsoft.AspNetCore.Mvc.ProblemDetails})">
            <summary>
            Maps the specified exception type <typeparamref name="TException"/> to a <see cref="N:Hellang.Middleware.ProblemDetails"/> instance
            using the specified <paramref name="mapping"/> function.
            </summary>
            <remarks>
            Mappers are called in the order they're registered.
            Returning <c>null</c> from the mapper will signify that you can't or don't want to map the exception to <see cref="N:Hellang.Middleware.ProblemDetails"/>.
            This will cause cause the exception to be rethrown.
            </remarks>
            <param name="mapping">The mapping function for creating a a problem details instance.</param>
            <typeparam name="TException">The exception type to map using the specified mapping function.</typeparam>
        </member>
        <member name="M:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.Rethrow``1">
            <summary>
            Marks the specified exception type <typeparamref name="TException"/> for re-throwing.
            This is useful if you have other upstream middleware that wants to handle the exception.
            </summary>
            <typeparam name="TException">The type of exception to re-throw.</typeparam>
        </member>
        <member name="M:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.Rethrow``1(System.Func{Microsoft.AspNetCore.Http.HttpContext,``0,System.Boolean})">
            <summary>
            Marks the specified exception type <typeparamref name="TException"/> for re-throwing, using
            the specified <paramref name="predicate"/>.
            </summary>
            <param name="predicate">The predicate to determine whether an exception should be re-thrown.</param>
            <typeparam name="TException">The type of exception to re-throw.</typeparam>
        </member>
        <member name="M:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.RethrowAll">
            <summary>
            Configures the middleware to re-throw all exceptions. This can be useful if you
            have upstream middleware that needs to do additional handling of exceptions.
            </summary>
        </member>
        <member name="M:Hellang.Middleware.ProblemDetails.ProblemDetailsOptions.Rethrow(System.Func{Microsoft.AspNetCore.Http.HttpContext,System.Exception,System.Boolean})">
            <summary>
            Configures the middleware to re-throw exceptions, based on the specified <paramref name="predicate"/>.
            </summary>
            <param name="predicate">The predicate to determine whether an exception should be re-thrown.</param>
        </member>
        <member name="T:Hellang.Middleware.ProblemDetails.StatusCodeProblemDetails">
            <summary>
            A basic problem details representation for an HTTP status code.
            It includes default values for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Type"/> and <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Title"/>.
            </summary>
        </member>
    </members>
</doc>
