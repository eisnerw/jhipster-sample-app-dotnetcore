// Optional: your own variable overrides before loading Bootstrap
@use 'bootstrap-variables' as *;

// Correct: use Bootstrap entrypoint and optionally override variables here
/////>>>@use "bootstrap" with (
  // Example override (if defined in bootstrap-variables)
/////>>>  $dropdown-link-hover-color: $dropdown-link-hover-color
/////>>>);

// Use Bootstrap variables via namespace
@use "bootstrap" as bs;

/* ==============================================================
   Bootstrap tweaks
=============================================================== */

body,
h1,
h2,
h3,
h4 {
  font-weight: 300;
}

a {
  color: #533f03;
  font-weight: bold;
}

/////>>>a:not([href]):not([tabindex]):hover.dropdown-item {
/////>>>  color: bs.$dropdown-link-hover-color;
/////>>>}

/* ðŸ›  Cannot use mix() on CSS vars â€” fallback to one variable or hardcoded value */
/////>>>.dropdown-item.active:hover {
/////>>>  background-color: bs.$dropdown-link-hover-bg; // or a custom color like #f0f0f0
/////>>>}

a:hover {
  color: #533f03;
  cursor: pointer;
}

/////>>>.dropdown-item:hover {
/////>>>  color: bs.$dropdown-link-hover-color;
/////>>>}

/* ==========================================================================
   Browser Upgrade Prompt
========================================================================== */
.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}

/* ==========================================================================
   Generic styles
========================================================================== */
.ng-valid[required],
.ng-valid.required {
  border-left: 5px solid green;
}

.ng-invalid:not(form) {
  border-left: 5px solid red;
}

.jh-card {
  padding: 1.5%;
  margin-top: 20px;
  border: none;
}

.error {
  color: white;
  background-color: red;
}

.pad {
  padding: 10px;
}

.w-40 {
  width: 40% !important;
}

.w-60 {
  width: 60% !important;
}

.break {
  white-space: normal;
  word-break: break-all;
}

.form-control {
  background-color: #fff;
}

.readonly {
  background-color: #eee;
  opacity: 1;
}

.footer {
  border-top: 1px solid rgba(0, 0, 0, 0.125);
}

.hand,
[jhisortby] {
  cursor: pointer;
}

/* ==========================================================================
   Custom alerts for notification
========================================================================== */
.alerts {
  .alert {
    text-overflow: ellipsis;

    pre {
      background: none;
      border: none;
      font: inherit;
      color: inherit;
      padding: 0;
      margin: 0;
    }

    .popover pre {
      font-size: 10px;
    }
  }

  .jhi-toast {
    position: fixed;
    width: 100%;

    &.left {
      left: 5px;
    }

    &.right {
      right: 5px;
    }

    &.top {
      top: 55px;
    }

    &.bottom {
      bottom: 55px;
    }
  }
}

@media screen and (min-width: 480px) {
  .alerts .jhi-toast {
    width: 50%;
  }
}

/* ==========================================================================
   Entity list page
========================================================================== */
.table-entities thead th .d-flex > * {
  margin: auto 0;
}

/* ==========================================================================
   Entity detail page
========================================================================== */
.row-md.jh-entity-details {
  display: grid;
  grid-template-columns: auto 1fr;
  column-gap: 10px;
  line-height: 1.5;
}

@media screen and (min-width: 768px) {
  .row-md.jh-entity-details > {
    dt {
      float: left;
      overflow: hidden;
      clear: left;
      text-align: right;
      text-overflow: ellipsis;
      white-space: nowrap;
      padding: 0.5em 0;
    }

    dd {
      border-bottom: 1px solid #eee;
      padding: 0.5em 0;
      margin-left: 0;
    }
  }
}

/* ==========================================================================
   UI Bootstrap tweaks
========================================================================== */
.nav,
.pagination,
.carousel,
.panel-title a {
  cursor: pointer;
}

.thread-dump-modal-lock {
  max-width: 450px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.dropdown-menu {
  padding-left: 0px;
}

/* ==========================================================================
   RTL patch (inline style patching)
========================================================================== */
.ribbon {
  left: -3.5em;
  transform: rotate(-45deg);
  -webkit-transform: rotate(-45deg);
}

/* navbar.component.scss tweaks */
.navbar {
  ul.navbar-nav {
    .nav-item {
      margin-left: 0.5em;
    }
  }
}

/* Normalize PrimeNG checkbox highlight styling app-wide */
:root {
}

/* Force white background for checked state in all contexts */
:root .p-checkbox.p-highlight .p-checkbox-box,
:root .p-checkbox .p-checkbox-box.p-highlight,
:root .p-datatable .p-checkbox .p-checkbox-box.p-highlight,
:root .p-checkbox .p-checkbox-box.p-highlight:hover,
:root .p-checkbox .p-checkbox-box.p-highlight.p-focus,
:root .p-datatable .p-checkbox .p-checkbox-box.p-highlight:hover,
:root .p-datatable .p-checkbox .p-checkbox-box.p-highlight.p-focus {
  background: #ffffff !important;
  background-color: #ffffff !important;
  border-color: var(--surface-border, #ced4da) !important;
  box-shadow: none !important;
}

:root .p-checkbox .p-checkbox-box.p-highlight .p-checkbox-icon,
:root .p-checkbox .p-checkbox-icon {
  color: var(--text-color, #212529) !important; /* dark check */
}

/* jhipster-needle-scss-add-main */
